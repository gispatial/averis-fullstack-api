{"version":3,"sources":["views/apps/calendar/AddEventSidebar.js","redux/actions/calendar/index.js","views/apps/calendar/AddEventButton.js","views/apps/calendar/Calendar.js"],"names":["eventColors","business","work","personal","others","AddEvent","state","startDate","Date","endDate","title","label","allDay","selectable","handleDateChange","date","setState","handleEndDateChange","handleLabelChange","handleAddEvent","id","props","handleSidebar","addEvent","start","end","nextProps","this","eventInfo","url","newEventId","events","map","i","pop","className","sidebar","length","onClick","size","UncontrolledDropdown","DropdownToggle","tag","DropdownMenu","right","DropdownItem","FormGroup","Input","type","placeholder","value","onChange","e","target","Label","for","options","altInput","altFormat","dateFormat","Button","Ripple","disabled","color","updateEvent","handleSelectedEvent","React","Component","bool","dispatch","status","event","connect","DragAndDropCalendar","withDragAndDrop","Calendar","localizer","momentLocalizer","moment","Toolbar","ButtonGroup","view","onView","onNavigate","CalendarApp","handleEventColors","moveEvent","droppedOnAllDaySlot","isAllDay","idx","indexOf","updatedEvent","nextEvents","splice","updateDrag","resizeEvent","existingEvent","updateResize","handleSelectEvent","filteredState","filter","views","month","week","day","app","selectedEvent","fetchEvents","Card","CardBody","onEventDrop","onEventResize","startAccessor","endAccessor","resourceAccessor","components","toolbar","eventPropGetter","popup","onSelectEvent","onSelectSlot","AddEventSidebar","resizable","calendar","a","axios","get","then","response","data","catch","err","console","log"],"mappings":"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","file":"static/js/103.7760bd68.chunk.js","sourcesContent":["import React from \"react\"\nimport { X, Tag } from \"react-feather\"\nimport {\n  UncontrolledDropdown,\n  DropdownItem,\n  DropdownMenu,\n  DropdownToggle,\n  FormGroup,\n  Input,\n  Label,\n  Button\n} from \"reactstrap\"\nimport Flatpickr from \"react-flatpickr\";\n\nimport \"flatpickr/dist/themes/light.css\";\nimport \"../../../assets/scss/plugins/forms/flatpickr/flatpickr.scss\"\n\nconst eventColors = {\n  business: \"chip-success\",\n  work: \"chip-warning\",\n  personal: \"chip-danger\",\n  others: \"chip-primary\"\n}\nclass AddEvent extends React.Component {\n  state = {\n    startDate: new Date(),\n    endDate: new Date(),\n    title: \"\",\n    label: null,\n    allDay: true,\n    selectable: true\n  }\n  handleDateChange = date => {\n    this.setState({\n      startDate: date\n    })\n  }\n\n  handleEndDateChange = date => {\n    this.setState({\n      endDate: date\n    })\n  }\n\n  handleLabelChange = label => {\n    this.setState({\n      label\n    })\n  }\n\n  handleAddEvent = id => {\n    this.props.handleSidebar(false)\n    this.props.addEvent({\n      id: id,\n      title: this.state.title,\n      start: this.state.startDate,\n      end: this.state.endDate,\n      label: this.state.label === null ? \"others\" : this.state.label,\n      allDay: this.state.allDay,\n      selectable: this.state.selectable\n    })\n    this.setState({\n      startDate: new Date(),\n      endDate: new Date(),\n      title: \"\",\n      label: null,\n      allDay: true,\n      selectable: true\n    })\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    this.setState({\n      title: nextProps.eventInfo === null ? \"\" : nextProps.eventInfo.title,\n      url: nextProps.eventInfo === null ? \"\" : nextProps.eventInfo.url,\n      startDate:\n        nextProps.eventInfo === null\n          ? new Date()\n          : new Date(nextProps.eventInfo.start),\n      endDate:\n        nextProps.eventInfo === null\n          ? new Date()\n          : new Date(nextProps.eventInfo.end),\n      label: nextProps.eventInfo === null ? null : nextProps.eventInfo.label,\n      allDay: nextProps.eventInfo === null ? true : nextProps.eventInfo.allDay,\n      selectable:\n        nextProps.eventInfo === null ? true : nextProps.eventInfo.selectable\n    })\n  }\n\n  render() {\n    let events = this.props.events.map(i => i.id)\n    let lastId = events.pop()\n    let newEventId = lastId + 1\n    return (\n      <div\n        className={`add-event-sidebar ${\n          this.props.sidebar ? \"show\" : \"hidden\"\n        }`}\n      >\n        <div className=\"header d-flex justify-content-between\">\n          <h3 className=\"text-bold-600 mb-0\">\n            {this.props.eventInfo !== null &&\n            this.props.eventInfo.title.length > 0\n              ? \"Update Event\"\n              : \"Add Event\"}\n          </h3>\n          <div\n            className=\"close-icon cursor-pointer\"\n            onClick={() => this.props.handleSidebar(false)}\n          >\n            <X size={20} />\n          </div>\n        </div>\n        <div className=\"add-event-body\">\n          <div className=\"category-action d-flex justify-content-between my-50\">\n            <div className=\"event-category\">\n              {this.state.label !== null ? (\n                <div className={`chip ${eventColors[this.state.label]}`}>\n                  <div className=\"chip-body\">\n                    <div className=\"chip-text text-capitalize\">\n                      {this.state.label}\n                    </div>\n                  </div>\n                </div>\n              ) : null}\n            </div>\n            <div className=\"category-dropdown\">\n              <UncontrolledDropdown>\n                <DropdownToggle tag=\"div\" className=\"cursor-pointer\">\n                  <Tag size={18} />\n                </DropdownToggle>\n                <DropdownMenu tag=\"ul\" right>\n                  <DropdownItem\n                    tag=\"li\"\n                    onClick={() => this.handleLabelChange(\"business\")}\n                  >\n                    <span className=\"bullet bullet-success bullet-sm mr-50\"></span>\n                    <span>Business</span>\n                  </DropdownItem>\n                  <DropdownItem\n                    tag=\"li\"\n                    onClick={() => this.handleLabelChange(\"work\")}\n                  >\n                    <span className=\"bullet bullet-warning bullet-sm mr-50\"></span>\n                    <span>Work</span>\n                  </DropdownItem>\n                  <DropdownItem\n                    tag=\"li\"\n                    onClick={() => this.handleLabelChange(\"personal\")}\n                  >\n                    <span className=\"bullet bullet-danger bullet-sm mr-50\"></span>\n                    <span>Personal</span>\n                  </DropdownItem>\n                  <DropdownItem\n                    tag=\"li\"\n                    onClick={() => this.handleLabelChange(\"others\")}\n                  >\n                    <span className=\"bullet bullet-primary bullet-sm mr-50\"></span>\n                    <span>Others</span>\n                  </DropdownItem>\n                </DropdownMenu>\n              </UncontrolledDropdown>\n            </div>\n          </div>\n          <div className=\"add-event-fields mt-2\">\n            <FormGroup className=\"form-label-group\">\n              <Input\n                type=\"text\"\n                id=\"EventTitle\"\n                placeholder=\"Event Title\"\n                value={this.state.title}\n                onChange={e => this.setState({ title: e.target.value })}\n              />\n              <Label for=\"EventTitle\">Event Title</Label>\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"startDate\">Start Date</Label>\n              <Flatpickr\n                id=\"startDate\"\n                className=\"form-control\"\n                value={this.state.startDate}\n                onChange={date => this.handleDateChange(date)}\n                options={{ altInput: true, altFormat: \"F j, Y\", dateFormat: \"Y-m-d\", }}\n              />\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"endDate\">End Date</Label>\n              <Flatpickr\n                id=\"endDate\"\n                className=\"form-control\"\n                value={this.state.endDate}\n                onChange={date => this.handleEndDateChange(date)}\n                options={{ altInput: true, altFormat: \"F j, Y\", dateFormat: \"Y-m-d\", }}\n              />\n            </FormGroup>\n          </div>\n          <hr className=\"my-2\" />\n          <div className=\"add-event-actions text-right\">\n            <Button.Ripple\n              disabled={this.state.title.length > 0 ? false : true}\n              color=\"primary\"\n              onClick={() => {\n                this.props.handleSidebar(false)\n                if (\n                  this.props.eventInfo === null ||\n                  this.props.eventInfo.title.length <= 0\n                )\n                  this.handleAddEvent(newEventId)\n                else\n                  this.props.updateEvent({\n                    id: this.props.eventInfo.id,\n                    title: this.state.title,\n                    label: this.state.label,\n                    start: this.state.startDate,\n                    end: this.state.endDate,\n                    allDay: true,\n                    selectable: true\n                  })\n              }}\n            >\n              {this.props.eventInfo !== null &&\n              this.props.eventInfo.title.length > 0\n                ? \"Update Event\"\n                : \"Add Event\"}\n            </Button.Ripple>\n            <Button.Ripple\n              className=\"ml-1\"\n              color=\"flat-danger\"\n              onClick={() => {\n                this.props.handleSidebar(false)\n                if (this.props.handleSelectedEvent)\n                  this.props.handleSelectedEvent(null)\n                else return null\n              }}\n            >\n              Cancel\n            </Button.Ripple>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default AddEvent\n","import axios from \"axios\"\n\nexport const fetchEvents = () => {\n  return async dispatch => {\n    await axios\n      .get(\"/api/apps/calendar/events\")\n      .then(response => {\n        dispatch({ type: \"FETCH_EVENTS\", events: response.data })\n      })\n      .catch(err => console.log(err))\n  }\n}\n\nexport const handleSidebar = bool => {\n  return dispatch => dispatch({ type: \"HANDLE_SIDEBAR\", status: bool })\n}\n\nexport const addEvent = event => {\n  return dispatch => {\n    dispatch({ type: \"ADD_EVENT\", event })\n  }\n}\nexport const updateEvent = event => {\n  return dispatch => {\n    dispatch({ type: \"UPDATE_EVENT\", event })\n  }\n}\n\nexport const updateDrag = event => {\n  return dispatch => {\n    dispatch({ type: \"UPDATE_DRAG\", event })\n  }\n}\n\nexport const updateResize = event => {\n  return dispatch => {\n    dispatch({ type: \"EVENT_RESIZE\", event })\n  }\n}\n\nexport const handleSelectedEvent = event => {\n  return dispatch => dispatch({ type: \"HANDLE_SELECTED_EVENT\", event })\n}\n","import React from \"react\"\nimport { Button } from \"reactstrap\"\nimport { Plus } from \"react-feather\"\nimport { connect } from \"react-redux\"\nimport {\n  handleSidebar,\n  handleSelectedEvent\n} from \"../../../redux/actions/calendar/index\"\nconst AddEventButton = props => {\n  return (\n    <Button.Ripple\n      color=\"primary\"\n      onClick={() => {\n        props.handleSidebar(true)\n        props.handleSelectedEvent(null)\n      }}\n      className=\"d-sm-block d-none\"\n    >\n      {\" \"}\n      <Plus size={15} /> <span className=\"align-middle\">Add</span>\n    </Button.Ripple>\n  )\n}\n\nexport default connect(null, { handleSidebar, handleSelectedEvent })(\n  AddEventButton\n)\n","import React from \"react\"\nimport AddEventSidebar from \"./AddEventSidebar\"\nimport AddEventButton from \"./AddEventButton\"\nimport { Card, CardBody, Button, ButtonGroup } from \"reactstrap\"\nimport { Calendar, momentLocalizer } from \"react-big-calendar\"\nimport withDragAndDrop from \"react-big-calendar/lib/addons/dragAndDrop\"\nimport moment from \"moment\"\nimport { connect } from \"react-redux\"\nimport {\n  fetchEvents,\n  handleSidebar,\n  addEvent,\n  handleSelectedEvent,\n  updateEvent,\n  updateDrag,\n  updateResize\n} from \"../../../redux/actions/calendar/index\"\nimport { ChevronLeft, ChevronRight } from \"react-feather\"\n\nimport \"react-big-calendar/lib/addons/dragAndDrop/styles.scss\"\nimport \"react-big-calendar/lib/css/react-big-calendar.css\"\nimport \"../../../assets/scss/plugins/calendars/react-big-calendar.scss\"\nconst DragAndDropCalendar = withDragAndDrop(Calendar)\nconst localizer = momentLocalizer(moment)\nconst eventColors = {\n  business: \"bg-success\",\n  work: \"bg-warning\",\n  personal: \"bg-danger\",\n  others: \"bg-primary\"\n}\n\nclass Toolbar extends React.Component {\n  render() {\n    return (\n      <div className=\"calendar-header mb-2 d-flex justify-content-between flex-wrap\">\n        <div>\n          <AddEventButton />\n        </div>\n        <div className=\"text-center view-options mt-1 mt-sm-0 ml-lg-5 ml-0\">\n          <ButtonGroup>\n            <button\n              className={`btn ${\n                this.props.view === \"month\"\n                  ? \"btn-primary\"\n                  : \"btn-outline-primary text-primary\"\n              }`}\n              onClick={() => {\n                this.props.onView(\"month\")\n              }}\n            >\n              Month\n            </button>\n            <button\n              className={`btn ${\n                this.props.view === \"week\"\n                  ? \"btn-primary\"\n                  : \"btn-outline-primary text-primary\"\n              }`}\n              onClick={() => {\n                this.props.onView(\"week\")\n              }}\n            >\n              Week\n            </button>\n            <button\n              className={`btn ${\n                this.props.view === \"day\"\n                  ? \"btn-primary\"\n                  : \"btn-outline-primary text-primary\"\n              }`}\n              onClick={() => {\n                this.props.onView(\"day\")\n              }}\n            >\n              Day\n            </button>\n          </ButtonGroup>\n        </div>\n        <div className=\"month-label d-flex flex-column text-center text-md-right mt-1 mt-md-0\">\n          <div className=\"calendar-navigation\">\n            <Button.Ripple\n              className=\"btn-icon rounded-circle\"\n              size=\"sm\"\n              color=\"primary\"\n              onClick={() => this.props.onNavigate(\"PREV\")}\n            >\n              <ChevronLeft size={15} />\n            </Button.Ripple>\n            <div className=\"month d-inline-block mx-75 text-bold-500 font-medium-2 align-middle\">\n              {this.props.label}\n            </div>\n            <Button.Ripple\n              className=\"btn-icon rounded-circle\"\n              size=\"sm\"\n              color=\"primary\"\n              onClick={() => this.props.onNavigate(\"NEXT\")}\n            >\n              <ChevronRight size={15} />\n            </Button.Ripple>\n          </div>\n          <div className=\"event-tags d-none d-sm-flex justify-content-end mt-1\">\n            <div className=\"tag mr-1\">\n              <span className=\"bullet bullet-success bullet-sm mr-50\"></span>\n              <span>Business</span>\n            </div>\n            <div className=\"tag mr-1\">\n              <span className=\"bullet bullet-warning bullet-sm mr-50\"></span>\n              <span>Work</span>\n            </div>\n            <div className=\"tag mr-1\">\n              <span className=\"bullet bullet-danger bullet-sm mr-50\"></span>\n              <span>Personal</span>\n            </div>\n            <div className=\"tag\">\n              <span className=\"bullet bullet-primary bullet-sm mr-50\"></span>\n              <span>Others</span>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nclass CalendarApp extends React.Component {\n  static getDerivedStateFromProps(props, state) {\n    if (\n      props.app.events.length !== state.events ||\n      props.app.sidebar !== state.sidebar ||\n      props.app.selectedEvent !== state.eventInfo\n    ) {\n      let dateToObj = props.app.events.map(event => {\n        event.start = new Date(event.start)\n        event.end = new Date(event.end)\n        return event\n      })\n      return {\n        events: dateToObj,\n        sidebar: props.app.sidebar,\n        eventInfo: props.app.selectedEvent\n      }\n    }\n    // Return null if the state hasn't changed\n    return null\n  }\n  constructor(props) {\n    super(props)\n    this.state = {\n      events: [],\n      views: {\n        month: true,\n        week: true,\n        day: true\n      },\n      eventInfo: null\n    }\n  }\n\n  async componentDidMount() {\n    await this.props.fetchEvents()\n  }\n\n  handleEventColors = event => {\n    return { className: eventColors[event.label] }\n  }\n\n  moveEvent = ({ event, start, end, isAllDay: droppedOnAllDaySlot }) => {\n    const { events } = this.state\n    const idx = events.indexOf(event)\n    let allDay = event.allDay\n    if (!event.allDay && droppedOnAllDaySlot) {\n      allDay = true\n    } else if (event.allDay && !droppedOnAllDaySlot) {\n      allDay = false\n    }\n    const updatedEvent = { ...event, start, end, allDay }\n    const nextEvents = [...events]\n    nextEvents.splice(idx, 1, updatedEvent)\n    this.setState({\n      events: nextEvents\n    })\n    this.props.updateDrag(updatedEvent)\n  }\n\n  resizeEvent = ({ event, start, end }) => {\n    const { events } = this.state\n    const nextEvents = events.map(existingEvent => {\n      return existingEvent.id === event.id\n        ? { ...existingEvent, start, end }\n        : existingEvent\n    })\n\n    this.setState({\n      events: nextEvents\n    })\n\n    this.props.updateResize({ ...event, start, end })\n  }\n\n  handleSelectEvent = event => {\n    let filteredState = this.state.events.filter(i => i.id === event.id)\n    this.props.handleSidebar(true)\n    this.props.handleSelectedEvent(filteredState[0])\n    this.setState({\n      eventInfo: filteredState[0]\n    })\n  }\n\n  render() {\n    const { events, views, sidebar } = this.state\n    return (\n      <div className=\"app-calendar position-relative\">\n        <div\n          className={`app-content-overlay ${sidebar ? \"show\" : \"hidden\"}`}\n          onClick={() => {\n            this.props.handleSidebar(false)\n            this.props.handleSelectedEvent(null)\n          }}\n        ></div>\n        <Card>\n          <CardBody>\n            <DragAndDropCalendar\n              localizer={localizer}\n              events={events}\n              onEventDrop={this.moveEvent}\n              onEventResize={this.resizeEvent}\n              startAccessor=\"start\"\n              endAccessor=\"end\"\n              resourceAccessor=\"url\"\n              views={views}\n              components={{ toolbar: Toolbar }}\n              eventPropGetter={this.handleEventColors}\n              popup={true}\n              onSelectEvent={event => {\n                this.handleSelectEvent(event)\n              }}\n              onSelectSlot={({ start, end }) => {\n                this.props.handleSidebar(true)\n                this.props.handleSelectedEvent({\n                  title: \"\",\n                  label: null,\n                  start: new Date(start),\n                  end: new Date(end),\n                  url: \"\"\n                })\n              }}\n              selectable={true}\n            />\n          </CardBody>\n        </Card>\n        <AddEventSidebar\n          sidebar={sidebar}\n          handleSidebar={this.props.handleSidebar}\n          addEvent={this.props.addEvent}\n          events={this.state.events}\n          eventInfo={this.state.eventInfo}\n          selectedEvent={this.props.handleSelectedEvent}\n          updateEvent={this.props.updateEvent}\n          resizable\n        />\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    app: state.calendar\n  }\n}\n\nexport default connect(mapStateToProps, {\n  fetchEvents,\n  handleSidebar,\n  addEvent,\n  handleSelectedEvent,\n  updateEvent,\n  updateDrag,\n  updateResize\n})(CalendarApp)\n"],"sourceRoot":""}